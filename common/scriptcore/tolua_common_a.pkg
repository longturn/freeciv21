/**************************************************************************
 Copyright (c) 1996-2020 Freeciv21 and Freeciv contributors. This file is
 part of Freeciv21. Freeciv21 is free software: you can redistribute it
 and/or modify it under the terms of the GNU  General Public License  as
 published by the Free Software Foundation, either version 3 of the
 License,  or (at your option) any later version. You should have received
 a copy of the GNU General Public License along with Freeciv21. If not,
 see https://www.gnu.org/licenses/.
**************************************************************************/

/*****************************************************************************
  ADVERTISEMENT: do not attempt to change the name of the API functions.
  They may be in use in Lua scripts in savefiles, so once released, the
  name and signature cannot change shape even in new major versions of
  Freeciv, until the relevant save format version can no longer be loaded.
  If you really like to change a function name, be sure to keep also the
  old one running.
*****************************************************************************/

$#ifdef HAVE_CONFIG_H
$#include <fc_config.h>
$#endif

/* common/scriptcore */
$#include "api_common_intl.h"
$#include "api_common_utilities.h"
$#include "luascript.h"
$#include "luascript_types.h"

/* Classes. */
struct Nonexistent {
};

/* Intl module. */
const char *api_intl__
  @ _ (lua_State *L, const char *untranslated);
const char *api_intl_N_
  @ N_ (lua_State *L, const char *untranslated);
const char *api_intl_Q_
  @ Q_ (lua_State *L, const char *untranslated);
const char *api_intl_PL_
  @ PL_ (lua_State *L, const char *singular, const char *plural, int n);

/* Log module. */
module log {
  module level {
    enum log_level {
      LOG_FATAL @ FATAL,
      LOG_ERROR @ ERROR,
      LOG_WARN @ WARN,
      LOG_NORMAL @ NORMAL,
      LOG_VERBOSE @ VERBOSE,
      LOG_DEBUG @ DEBUG
    };
  }

  void api_utilities_log_base
    @ base (lua_State *L, int log_level, const char *message);

  void api_utilities_deprecation_warning
    @ deprecation_warning(lua_State *L, char *method, char *replacement, char *deprecated_since);
}

/* Utilities module. */
int api_utilities_random
  @ random (lua_State *L, int min, int max);

const char *api_utilities_fc_version
  @ fc_version (lua_State *L);
